// <auto-generated />
using LSMEmprunts.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace LSMEmprunts.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20171115163537_AddGearFailure")]
    partial class AddGearFailure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("LSMEmprunts.Data.Borrowing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BorrowTime");

                    b.Property<string>("Comment");

                    b.Property<int>("GearId");

                    b.Property<DateTime?>("ReturnTime");

                    b.Property<int>("State")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("GearId");

                    b.HasIndex("State");

                    b.HasIndex("UserId");

                    b.ToTable("Borrowings");
                });

            modelBuilder.Entity("LSMEmprunts.Data.Gear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BarCode")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("Gears");
                });

            modelBuilder.Entity("LSMEmprunts.Data.GearFailure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CloseDate");

                    b.Property<string>("ClosingDescription");

                    b.Property<int>("GearId");

                    b.Property<DateTime>("OpenDate");

                    b.Property<string>("OpeningDescription");

                    b.HasKey("Id");

                    b.HasIndex("GearId");

                    b.ToTable("Failures");
                });

            modelBuilder.Entity("LSMEmprunts.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LicenceScanId")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.HasIndex("LicenceScanId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LSMEmprunts.Data.Borrowing", b =>
                {
                    b.HasOne("LSMEmprunts.Data.Gear", "Gear")
                        .WithMany("Borrowings")
                        .HasForeignKey("GearId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LSMEmprunts.Data.User", "User")
                        .WithMany("Borrowings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LSMEmprunts.Data.GearFailure", b =>
                {
                    b.HasOne("LSMEmprunts.Data.Gear", "Gear")
                        .WithMany("Failures")
                        .HasForeignKey("GearId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
